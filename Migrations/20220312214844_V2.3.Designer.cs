// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Models;

namespace CalorieCounter.Migrations
{
    [DbContext(typeof(CalorieCounterContext))]
    [Migration("20220312214844_V2.3")]
    partial class V23
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Models.Dan", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Datum")
                        .HasColumnType("datetime2");

                    b.Property<int>("Kalorije")
                        .HasColumnType("int");

                    b.Property<int>("Kilaza")
                        .HasColumnType("int");

                    b.Property<int>("Masti")
                        .HasColumnType("int");

                    b.Property<int>("OsobaID")
                        .HasColumnType("int");

                    b.Property<int>("Proteini")
                        .HasColumnType("int");

                    b.Property<int>("UgljeniHidrati")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("OsobaID");

                    b.ToTable("Dani");
                });

            modelBuilder.Entity("Models.Hrana", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Kalorije")
                        .HasColumnType("int");

                    b.Property<int>("Masti")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Proteini")
                        .HasColumnType("int");

                    b.Property<int>("UgljeniHidrati")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Hrana");
                });

            modelBuilder.Entity("Models.Obrok", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DanID")
                        .HasColumnType("int");

                    b.Property<int>("Kalorije")
                        .HasColumnType("int");

                    b.Property<int>("Masti")
                        .HasColumnType("int");

                    b.Property<int>("Proteini")
                        .HasColumnType("int");

                    b.Property<string>("Tip")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("UgljeniHidrati")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("DanID");

                    b.ToTable("Obroci");
                });

            modelBuilder.Entity("Models.Osoba", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CiljKcal")
                        .HasColumnType("int");

                    b.Property<int>("CiljKg")
                        .HasColumnType("int");

                    b.Property<int>("FizAktivnost")
                        .HasColumnType("int");

                    b.Property<int>("Godine")
                        .HasColumnType("int");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("PocetakKg")
                        .HasColumnType("int");

                    b.Property<string>("Pol")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("TrenutnoKg")
                        .HasColumnType("int");

                    b.Property<int>("Visina")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Osobe");
                });

            modelBuilder.Entity("Models.Porcija", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("HranaID")
                        .HasColumnType("int");

                    b.Property<int>("Kalorije")
                        .HasColumnType("int");

                    b.Property<int>("Masti")
                        .HasColumnType("int");

                    b.Property<int?>("ObrokID")
                        .HasColumnType("int");

                    b.Property<int>("Proteini")
                        .HasColumnType("int");

                    b.Property<int>("UgljeniHidrati")
                        .HasColumnType("int");

                    b.Property<int>("Velicina")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("HranaID");

                    b.HasIndex("ObrokID");

                    b.ToTable("Porcije");
                });

            modelBuilder.Entity("Models.Dan", b =>
                {
                    b.HasOne("Models.Osoba", "Osoba")
                        .WithMany("Dani")
                        .HasForeignKey("OsobaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Osoba");
                });

            modelBuilder.Entity("Models.Obrok", b =>
                {
                    b.HasOne("Models.Dan", "Dan")
                        .WithMany("Obroci")
                        .HasForeignKey("DanID");

                    b.Navigation("Dan");
                });

            modelBuilder.Entity("Models.Porcija", b =>
                {
                    b.HasOne("Models.Hrana", "Hrana")
                        .WithMany("Porcije")
                        .HasForeignKey("HranaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Models.Obrok", "Obrok")
                        .WithMany("Porcija")
                        .HasForeignKey("ObrokID");

                    b.Navigation("Hrana");

                    b.Navigation("Obrok");
                });

            modelBuilder.Entity("Models.Dan", b =>
                {
                    b.Navigation("Obroci");
                });

            modelBuilder.Entity("Models.Hrana", b =>
                {
                    b.Navigation("Porcije");
                });

            modelBuilder.Entity("Models.Obrok", b =>
                {
                    b.Navigation("Porcija");
                });

            modelBuilder.Entity("Models.Osoba", b =>
                {
                    b.Navigation("Dani");
                });
#pragma warning restore 612, 618
        }
    }
}
